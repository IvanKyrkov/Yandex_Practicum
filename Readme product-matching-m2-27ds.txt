# Мастерская 2 Product matching [M2_27DS+] (Мэтчинг товаров)

Краткое описание проекта

Задача
-разработать алгоритм, который для всех товаров из validation.csv предложит несколько вариантов 
	наиболее похожих товаров из base;
-оценить качество алгоритма по метрике accuracy@5
-*деплой: разработать REST API сервис, который по предложенным данным будем предлагать несколько 
	похожих товаров.

Описание имеющихся данных:
-base.csv - анонимизированный набор товаров. Каждый товар представлен как уникальный id 
	(0-base, 1-base, 2-base) и вектор признаков размерностью 72.
-train.csv - обучающий датасет. Каждая строчка - один товар, для которого известен уникальный id 
	(0-query, 1-query, …) , вектор признаков И id товара из base.csv, который максимально похож 
	на него (по мнению экспертов).
-validation.csv - датасет с товарами (уникальный id и вектор признаков), для которых надо найти 
	наиболее близкие товары из base.csv
-validation_answer.csv - правильные ответы к предыдущему файлу.

Цель исследования:
Разработать алгоритм, который на основе обучающего набора данных (train.csv) и валидационного 
	набора данных (validation.csv) предложит несколько вариантов наиболее похожих товаров 
	из базы данных (base.csv) для каждого товара из валидационного набора. Это позволит 
	создать систему рекомендаций товаров, способную предлагать пользователям товары, аналогичные 
	тем, которые они уже просматривали или покупали.

Контекст исследования:
В современном мире, где потребители сталкиваются с огромным выбором товаров, система рекомендаций 
	играет ключевую роль в удовлетворении потребностей пользователей. Она помогает компаниям 
	увеличить продажи, улучшить пользовательский опыт и увеличить лояльность клиентов. 
	В данном исследовании используется набор данных, содержащий информацию о товарах и их 
	признаках, чтобы разработать алгоритм, способный предсказывать наиболее подходящие товары 
	на основе входных данных.

План исследования:
1. **Установка и импорт необходимых библиотек**: Начнем с установки и импорта необходимых библиотек 
	для работы с данными и разработки алгоритма.
2. **Выгрузка данных**: Загрузим обучающий, валидационный и базовый наборы данных из соответствующих 
	CSV-файлов.
3. **EDA (Exploratory Data Analysis)**: Проведем исследование данных, включая построение гистограмм 
	для визуализации распределения признаков, проверку корреляций между признаками и определение 
	признаков с ненормальным распределением.
4. **Удаление столбцов с ненормальным распределением**: На основе EDA удалим признаки с ненормальным 
	распределением, которые могут негативно влиять на качество модели.
5. **Преобразование данных**: Применим стандартизацию данных для всех трех наборов данных, чтобы 
	обеспечить согласованность масштаба признаков.
6. **Создание индекса**: Используя библиотеку FAISS, создадим индекс для быстрого поиска ближайших 
	соседей в базовом наборе данных.
7. **Обучение и тестирование модели**: Обучим модель на обучающем наборе данных и оценим ее качество 
	на валидационном наборе данных, используя метрику accuracy@5.
8. **Деплой**: Разработаем REST API сервис, который будет использовать обученную модель для предложения 
	наиболее подходящих товаров на основе входных данных.

Этот план исследования позволит достичь поставленной цели разработки эффективной системы рекомендаций 
товаров, способной предлагать пользователям наиболее подходящие товары на основе их интересов 
и предыдущих покупок.